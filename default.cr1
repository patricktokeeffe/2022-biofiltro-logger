' BioFiltro Study GHG Logger
' Patrick O'Keeffe <pokeeffe@wsu.edu>
' https://github.com/patricktokeeffe/2022-biofiltro-logger
'
'Copyright 2022 - Patrick O'Keeffe for Washington State University
'
'Permission is hereby granted, free of charge, to any person obtaining a 
'copy of this software and associated documentation files (the "Software"), 
'to deal in the Software without restriction, including without limitation 
'the rights to use, copy, modify, merge, publish, distribute, sublicense, 
'and/or sell copies of the Software, and to permit persons to whom the 
'Software is furnished to do so, subject to the following conditions:
'
'The above copyright notice and this permission notice shall be included in 
'all copies or substantial portions of the Software.
'
'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
'IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
'FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
'THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
'LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
'FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
'DEALINGS IN THE SOFTWARE.

ConstTable(Constants) 'HINT named so can modify via LoggerNet
  Const UTC_OFFSET = -8  'hrs, logger offset relative to UTC time
  Const PAR_MULT As Float = 0 'unique sensor calibration, umol/(mV s m^2) - NEGATIVE for LI-190SA wiring convention
EndConstTable

Const WXT_COM = 7      'datalogger COM port
Const WXT_SDI = 0      'SDI address
Public WXT_AZIMUTH As Float = 0  'orientation w.r.t. True North, degrees

Const PAR_DF = 1

Const GPS_COM = Com3
Const MAX_DRIFT = 500 'ms

Const SCAN_INT = 60    'seconds, also for data record interval
Const DAYS_DATA = 365*5   'how long to store data ON THE CARD? (Ring fill)
'HINT: internal memory keeps >45 days, 2GB card can support decades

Const WXT_NVARS = 11
Public WXT(WXT_NVARS)
Alias WXT(1)  = WindDir
Alias WXT(2)  = WindSpeed
Alias WXT(3)  = Tmpr
Alias WXT(4)  = RH
Alias WXT(5)  = Press
Alias WXT(6) = Rain_amt
Alias WXT(7) = Rain_dur
Alias WXT(8) = Rain_int
Alias WXT(9) = Rain_peak
Alias WXT(10) = HeaterTmpr
Alias WXT(11) = HeaterVolts
Units WindDir = degrees
Units WindSpeed = m/s
Units Tmpr = degC
Units RH = percent
Units Press = hPa
Units Rain_amt = mm
Units Rain_dur = sec
Units Rain_int = mm/hr
Units Rain_peak = mm/hr
Units HeaterTmpr = degC
Units HeaterVolts = Vdc

Public PAR_density
Units PAR_density = umol/(s m^2)

Public LoggerTmpr
Public PowerIn
Units LoggerTmpr = degC
Units PowerIn = Vdc

Dim nmea_sentence(2) As String * 110
Public gps_data(15)
Alias gps_data(1) = latitude_a         'Degrees latitude (+ = North; - = South)
Alias gps_data(2) = latitude_b         'Minutes latitude
Alias gps_data(3) = longitude_a        'Degress longitude (+ = East; - = West)
Alias gps_data(4) = longitude_b        'Minutes longitude
Alias gps_data(5) = speed              'Speed
Alias gps_data(6) = course             'Course over ground
Alias gps_data(7) = magnetic_variation 'Magnetic variation from true north (+ = East; - = West)
Alias gps_data(8) = fix_quality        'GPS fix quality: 0 = invalid, 1 = GPS, 2 = differential GPS, 6 = estimated
Alias gps_data(9) = nmbr_satellites    'Number of satellites used for fix
Alias gps_data(10) = altitude          'Antenna altitude
Alias gps_data(11) = pps               'usec into sec of system clock when PPS rising edge occurs, typically 990,000 once synced
Alias gps_data(12) = dt_since_gprmc    'Time since last GPRMC string, normally less than 1 second
Alias gps_data(13) = gps_ready         'Counts from 0 to 10, 10 = ready
Alias gps_data(14) = max_clock_change  'Maximum value the clock was changed in msec
Alias gps_data(15) = nmbr_clock_change 'Number of times the clock was changed
Units latitude_a = degrees
Units latitude_b = minutes
Units longitude_a = degrees
Units longitude_b = minutes
Units speed = m/s
Units course = degrees
Units magnetic_variation = unitless
Units fix_quality = unitless
Units nmbr_satellites = unitless
Units altitude = m
Units pps = ms
Units dt_since_gprmc = s
Units gps_ready = unitless
Units max_clock_change = ms
Units nmbr_clock_change = samples


DataTable (biofiltro_1min,True,-1)
  CardOut(0,DAYS_DATA*1440)
  DataInterval (0,60,Sec,10)
  Median(1,WindDir,12,FP2,WindDir=NAN) 'average WD might be meaningless
  Average(1,WindDir,FP2,WindDir=NAN)
  Average(1,WindSpeed,FP2,WindSpeed=NAN)
  Average(1,Tmpr,FP2,Tmpr=NAN)
  Average(1,RH,FP2,RH=NAN)
  Average(1,Press,IEEE4,Press=NAN) 'overranges FP2 precision
  Totalize(1,Rain_amt,FP2,Rain_amt=NAN)
  Sample(1,PAR_density,FP2) 'rounding PAR ok
  Sample(1,LoggerTmpr,FP2)
  Sample(1,PowerIn,FP2)
  Sample(1,ClockError,FP2)
  Sample(1,UTC_OFFSET,FP2)
    FieldNames("UTC_OFFSET")
    Units UTC_OFFSET = hours
  Sample(1,WXT_AZIMUTH,FP2)
    FieldNames("WXT_AZIMUTH")
    Units WXT_AZIMUTH = degrees
  Sample(1,PAR_MULT,IEEE4)
    FieldNames("PAR_MULT")
    Units PAR_MULT = umol/(mV s m^2)
EndTable


DisplayMenu("N2O Trailer",-1)
  SubMenu("WXT510")
    MenuItem("Azimuth", WXT_AZIMUTH)
    DisplayValue("WD, deg", WindDir)
    DisplayValue("WS, m/s", WindSpeed)
    DisplayValue("T, *C", Tmpr)
    DisplayValue("RH, %", RH)
    DisplayValue("P, hPa", Press)
    DisplayValue("R_amt, mm", Rain_amt)
    DisplayValue("R_dur, sec", Rain_dur)
    DisplayValue("R_int, mm/hr", Rain_int)
    DisplayValue("R_peak, mm/hr", Rain_peak)
  EndSubMenu
  DisplayValue("PAR (approx)", PAR_density)
  DisplayValue("Logger T, *C", LoggerTmpr)
  DisplayValue("PowerIn, Vdc", PowerIn)
EndMenu


BeginProg
  Scan (SCAN_INT,Sec,0,0)
    PanelTemp(LoggerTmpr,250)
    Battery(PowerIn)
    If (PowerIn > 12.6) Then
      SW12(True) 'allow WXT heating
    Else
      SW12(False) 'disable on battery
    EndIf
    
    Move(WXT(1),WXT_NVARS,NAN,1)
    SDI12Recorder(WXT(1),WXT_COM,WXT_SDI,"R!",1,0)
    If (WindDir <> NAN) Then
      WindDir = (WindDir + WXT_AZIMUTH) MOD 360
    EndIf
    
    VoltDiff(PAR_density,1,mV25,PAR_DF,True,0,_60Hz,PAR_MULT,0)
    If (PAR_density < 0) Then
      PAR_density = 0
    EndIf
    
    CallTable (biofiltro_1min)
  NextScan
  
  SlowSequence 'HINT keep possible timeouts from impacting daq
  Scan(5,Min,1,0)
    GPS(gps_data(1),GPS_COM,UTC_OFFSET*3600,MAX_DRIFT,nmea_sentence(1))
  NextScan
EndProg

